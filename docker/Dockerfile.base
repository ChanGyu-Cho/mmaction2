ARG PYTORCH="2.1.2"
ARG CUDA="12.1"
ARG CUDNN="8"

FROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel

# Ensure we explicitly use the Conda Python interpreter from the base image
ENV PYTHON=/opt/conda/bin/python
ENV PATH="/opt/conda/bin:${PATH}"

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5 8.0 8.6+PTX"
ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

# Timezone 설정 (대화형 프롬프트 방지)
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Seoul

# fetch the key refer to https://forums.developer.nvidia.com/t/18-04-cuda-docker-image-is-broken/212892/9
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub
RUN apt-get update && apt-get install -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 ffmpeg \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install MMCV (로컬 환경과 동일한 버전)
# Install a NumPy compatible with extensions built for NumPy 1.x to avoid ABI
# issues; keep <2 to avoid runtime errors from compiled modules expecting NumPy 1.x
RUN ${PYTHON} -m pip install --no-cache-dir "numpy<2"

# Install openmim and install mmengine/mmcv using the same Python interpreter
RUN ${PYTHON} -m pip install --no-cache-dir openmim
RUN ${PYTHON} -m mim install mmengine==0.10.7 mmcv==2.1.0

# Install MMAction2 from local source
# NOTE: This Dockerfile expects the build context to be the mmaction2 repo root
# (D:\mmaction2). Build from the repo root with:
#   docker build -f docker\Dockerfile.base -t mmaction2-base .
# The COPY below will place your local sources into /mmaction2 in the image.
RUN conda clean --all
COPY . /mmaction2
WORKDIR /mmaction2
RUN mkdir -p /mmaction2/data
ENV FORCE_CUDA="1"

# Note: dependency installation moved to the final image Dockerfile to ensure
# the correct requirements file is used (original-image/requirements.txt).

# Install MMAction2 in editable mode
RUN ${PYTHON} -m pip install cython --no-cache-dir

# Ensure importlib_metadata backport is available (some code imports it directly)
RUN ${PYTHON} -m pip install --no-cache-dir importlib-metadata

# Install the package in editable mode using the Conda Python
RUN ${PYTHON} -m pip install --no-cache-dir -e .